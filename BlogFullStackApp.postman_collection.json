{
  "info": {
    "name": "BlogFullStackApp",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "A collection for testing the BlogFullStackApp API."
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\",\n    \"password\": \"StrongP@ssw0rd\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user"
          },
          "response": []
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"StrongP@ssw0rd\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Login and get access token"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "const response = pm.response.json();",
                  "",
                  "if (response.accessToken) {",
                  "    pm.environment.set('accessToken', response.accessToken);",
                  "    console.log('Access token saved to environment');",
                  "}",
                  "",
                  "if (response.refreshToken) {",
                  "    pm.environment.set('refreshToken', response.refreshToken);",
                  "    console.log('Refresh token saved to environment');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "refresh"]
            },
            "description": "Refresh access token using refresh token"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "const response = pm.response.json();",
                  "",
                  "if (response.accessToken) {",
                  "    pm.environment.set('accessToken', response.accessToken);",
                  "    console.log('Access token refreshed and saved to environment');",
                  "}",
                  "",
                  "if (response.refreshToken) {",
                  "    pm.environment.set('refreshToken', response.refreshToken);",
                  "    console.log('Refresh token updated and saved to environment');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout"]
            },
            "description": "Logout and invalidate tokens"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    pm.environment.unset('accessToken');",
                  "    pm.environment.unset('refreshToken');",
                  "    console.log('Tokens removed from environment after successful logout');",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "User",
      "item": [
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/user/profile",
              "host": ["{{baseUrl}}"],
              "path": ["user", "profile"]
            },
            "description": "Get current user profile"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Blog Posts",
      "item": [
        {
          "name": "Get All Posts",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/posts",
              "host": ["{{baseUrl}}"],
              "path": ["posts"]
            },
            "description": "Get all blog posts"
          },
          "response": []
        },
        {
          "name": "Get Post by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/posts/:id",
              "host": ["{{baseUrl}}"],
              "path": ["posts", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "postId"
                }
              ]
            },
            "description": "Get a specific blog post by ID"
          },
          "response": []
        },
        {
          "name": "Create Post",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Test Blog Post\",\n    \"content\": \"This is the content of my blog post.\",\n    \"tags\": [\"test\", \"blog\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/posts",
              "host": ["{{baseUrl}}"],
              "path": ["posts"]
            },
            "description": "Create a new blog post"
          },
          "response": []
        },
        {
          "name": "Update Post",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Updated Blog Post\",\n    \"content\": \"This is the updated content of my blog post.\",\n    \"tags\": [\"test\", \"blog\", \"updated\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/posts/:id",
              "host": ["{{baseUrl}}"],
              "path": ["posts", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "postId"
                }
              ]
            },
            "description": "Update an existing blog post"
          },
          "response": []
        },
        {
          "name": "Delete Post",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/posts/:id",
              "host": ["{{baseUrl}}"],
              "path": ["posts", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "postId"
                }
              ]
            },
            "description": "Delete a blog post"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    }
  ]
}
